{
  "function_definitions": [
    {
      "_id": "mktemp_racecond",
      "name": "tempfile.mktemp",
      "score": 20,
      "message": "Usage of tempfile.mktemp is susceptible to race conditions!"
    },
    {
      "_id": "os_system_execution",
      "name": {
        "type": "regex",
        "pattern": "^os\\.(system|popen[234]?|startfile)$"
      },
      "score": 50,
      "message": "Code is performing system command execution",
      "tags": ["system_execution"]
    },
    {
      "_id": "python_code_execution",
      "name": {
        "type": "regex",
        "pattern": "^(eval|exec)$"
      },
      "score": 100,
      "tags": ["obfuscation", "code_execution"],
      "message": "eval/exec usage found in a source code"
    }
  ],
  "sensitive_filenames": [
    "my_passwords.txt"
  ],
  "modules": [
    {
      "name": "network",
      "score": 10,
      "modules": [
        "requests"
      ]
    }
  ],
  "django_modules": [
    "django.shortcuts.render"
  ],
  "taint_sinks": [
    "flask.make_response",
    "flask.make_response.set_cookie",
    "flask.jsonify",
    "flask.send_file",
    "os.system",
    "subprocess.Popen",
    "subprocess.call",
    "eval",
    "exec",
    "open",
    "django.shortcuts.render"
  ],
  "taint_sources": [
    "input",
    "raw_input",
    "flask.request.url",
    "flask.request.args.*",
    "flask.request.form.*",
    "flask.request.path",
    "flask.request.headers.*",
    "flask.request.files.*",
    "flask.request.cookies.*",
    "flask.request.get_json"
  ],
  "taint_clean": [
    "int",
    "flask.Markup.escape"
  ],
  "strings": [
    {
      "id": "url",
      "type": "regex",
      "pattern": "^(http|ftp)s?://.+",
      "message": "A possible URL has been found",
      "score": 0,
      "tags": ["url"]
    }
  ]
}
